name: Packer build
on: [pull_request]

jobs:
  packer-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'
          check-latest: true

      - name: Install dependencies
        run: |
          go mod download

      - name: Check Go version
        run: go version

      - name: Build application and users.csv
        env:
          APP_DEFAULTUSERS_CSV: ${{ secrets.APP_DEFAULTUSERS_CSV }}
        run: |
          mkdir builds
          go build -o ./builds/webapp ./cmd/main.go
          mv ./webapp ./builds
          echo $APP_DEFAULTUSERS_CSV > ./builds/users.csv
          ls -la ./builds

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: 'latest'

      - name: Run `packer init`
        id: init
        run: "packer init ./packer/debian12-ami.pkr.hcl"

      - name: Run `packer build`
        id: build
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PKR_AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PKR_AWS_SECRET_KEY }}
          PKR_AWS_REGION: ${{ vars.PKR_AWS_REGION }}
          PKR_AWS_SRC_AMI: ${{ vars.PKR_AWS_SRC_AMI }}
          PKR_AWS_SSH_USERNAME: ${{ vars.PKR_AWS_SSH_USERNAME }}
          PKR_AWS_SUBNET: ${{ vars.PKR_AWS_SUBNET }}
          APP_DBHOST: ${{ secrets.APP_DBHOST }}
          APP_DBUSER: ${{ secrets.APP_DBUSER }}
          APP_DBPASSWORD: ${{ secrets.APP_DBPASSWORD }}
          APP_DBNAME: ${{ secrets.APP_DBNAME }}
          APP_DBPORT: ${{ secrets.APP_DBPORT }}
          APP_SERVERPORT: ${{ secrets.APP_SERVERPORT }}
          APP_DEFAULT_USERS_LOC: ${{ secrets.APP_DEFAULT_USERS_LOC }}
        run: "packer build ./packer/debian12-ami.pkr.hcl"