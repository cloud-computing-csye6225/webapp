name: Packer build

on:
  pull_request:
    types:
      - closed

jobs:
  packer-build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'
          check-latest: true

      - name: Install dependencies
        run: |
          go mod download

      - name: Check Go version
        run: go version

      - name: Set up PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install postgresql postgresql-client
          sudo service postgresql start
          pg_isready

      - name: Updating database user
        env:
          DBUSER: ${{ secrets.APP_DBUSER }}
          DBPASSWORD: ${{ secrets.APP_DBPASSWORD }}
        run: |
          sudo -u postgres psql -c "ALTER ROLE $DBUSER WITH PASSWORD '$DBPASSWORD';"

      - name: run integration test
        env:
          DBHOST: ${{ secrets.APP_DBHOST }}
          DBUSER: ${{ secrets.APP_DBUSER }}
          DBPASSWORD: ${{ secrets.APP_DBPASSWORD }}
          DBNAME: ${{ secrets.APP_DBNAME }}
          DBPORT: ${{ secrets.APP_DBPORT }}
        run: go test ./integration_tests/

      - name: Create systemd unit file
        env:
          USER: ${{ vars.SYSTEMCTL_USER }}
          GROUP: ${{ vars.SYSTEMCTL_GROUP }}
          ENVFILE: ${{ vars.SYSTEMCTL_ENVFILE_LOC }}
          EXECFILE: ${{ vars.SYSTEMCTL_EXECFILE }}
          APPLOG: ${{ vars.SYSTEMCTL_APPLOG }}
          ERRLOG: ${{ vars.SYSTEMCTL_ERRLOG }}
        run: |
          cat ./packer/systemd/webapp.service \
          | sed "s|{{USER}}|$USER|" \
          | sed "s|{{GROUP}}|$GROUP|" \
          | sed "s|{{ENVFILE}}|$ENVFILE|" \
          | sed "s|{{EXECFILE}}|$EXECFILE|" \
          | sed "s|{{APPLOG}}|$APPLOG|" \
          | sed "s|{{ERRLOG}}|$ERRLOG|" \
          > ./packer/systemd/webapp.service

      - name: Build and pack application artifacts
        run: |
          mkdir builds
          mv ./packer/systemd/webapp.service ./builds/
          mv ./packer/cloudwatch/webapp.json ./builds/
          ls -la ./builds
          go build -o ./builds/webapp ./cmd/main.go
          cd ./builds/
          touch users.csv
          echo "${{ secrets.APP_DEFAULTUSERS_CSV }}" >> users.csv
          wc -l ./users.csv
          tar -cf webapp.tar ./*
          cd ..
          ls -la ./builds

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: 'latest'

      - name: Run `packer init`
        id: init
        run: "packer init ./packer/debian12-ami.pkr.hcl"

      - name: Run `packer build`
        id: build
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PKR_AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PKR_AWS_SECRET_KEY }}
          PKR_AWS_REGION: ${{ vars.PKR_AWS_REGION }}
          PKR_AWS_SRC_AMI: ${{ vars.PKR_AWS_SRC_AMI }}
          PKR_AWS_SSH_USERNAME: ${{ vars.PKR_AWS_SSH_USERNAME }}
        run: "packer build ./packer/debian12-ami.pkr.hcl"